<Activity mc:Ignorable="sap sap2010" x:Class="PostProcessing" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="developmentStatus" Type="InArgument(x:String)" />
    <x:Property Name="automationHubId" Type="InArgument(x:String)" />
    <x:Property Name="startTime" Type="InArgument(s:DateTime)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1322,3527</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>PostProcessing_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="PostProcessing" sap:VirtualizedContainerService.HintSize="1113,3462" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[developmentStatus.ToLower = &quot;production&quot; and automationHubId &lt;&gt; &quot;Change to automation ID from Automation Hub&quot;]" DisplayName="If to check for changed standard input" sap:VirtualizedContainerService.HintSize="1051,3351" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence DisplayName="Sequence - execution" sap:VirtualizedContainerService.HintSize="1017,3201" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="st_folder_path" />
            <Variable x:TypeArguments="x:String" Name="st_queue_name" />
            <Variable x:TypeArguments="x:String" Name="st_Bearer" />
            <Variable x:TypeArguments="x:String" Name="st_api_output" />
            <Variable x:TypeArguments="ui:QueueItem" Name="transaction" />
            <Variable x:TypeArguments="njl:JObject" Name="json_api_output" />
            <Variable x:TypeArguments="x:String" Name="st_endpoint" />
            <Variable x:TypeArguments="ss:SecureString" Name="token" />
            <Variable x:TypeArguments="x:Int32" Name="int_StatusCode" />
            <Variable x:TypeArguments="x:String" Name="st_error_message" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Sequence - data collection" sap:VirtualizedContainerService.HintSize="975,1025" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Folder Path Orchestrator" DisplayName="Get Asset Orchestrator folder path" sap:VirtualizedContainerService.HintSize="434,138" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
              <ui:GetRobotAsset.Value>
                <OutArgument x:TypeArguments="x:String">[st_folder_path]</OutArgument>
              </ui:GetRobotAsset.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:GetRobotAsset>
            <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="Bearer token secure" DisplayName="Get Credential Bearer token" FolderPath="[st_folder_path]" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[token]" />
            <Assign DisplayName="Assign Bearer Token" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[st_Bearer]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["Bearer " + new system.net.NetworkCredential(string.Empty, token).password]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Queue Name Orchestrator" DisplayName="Get Asset Orchestrator queue name" FolderPath="[st_folder_path]" sap:VirtualizedContainerService.HintSize="434,138" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
              <ui:GetRobotAsset.Value>
                <OutArgument x:TypeArguments="x:String">[st_queue_name]</OutArgument>
              </ui:GetRobotAsset.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:GetRobotAsset>
            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="API endpoint" DisplayName="Get Asset - Endpoint" FolderPath="[st_folder_path]" sap:VirtualizedContainerService.HintSize="434,138" sap2010:WorkflowViewState.IdRef="GetRobotAsset_6">
              <ui:GetRobotAsset.Value>
                <OutArgument x:TypeArguments="x:String">[st_endpoint]</OutArgument>
              </ui:GetRobotAsset.Value>
            </ui:GetRobotAsset>
            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Error message" DisplayName="Get Asset - Error message" FolderPath="[st_folder_path]" sap:VirtualizedContainerService.HintSize="434,138" sap2010:WorkflowViewState.IdRef="GetRobotAsset_7">
              <ui:GetRobotAsset.Value>
                <OutArgument x:TypeArguments="x:String">[st_error_message]</OutArgument>
              </ui:GetRobotAsset.Value>
            </ui:GetRobotAsset>
          </Sequence>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="975,2048" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <Sequence DisplayName="Sequence - Data collecting and logging" sap:VirtualizedContainerService.HintSize="572,1421" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" BodyFormat="application/xml" DisplayName="Collect data from AH" EnableSSLVerification="True" EndPoint="[new Uri(new Uri(st_endpoint), automationHubId).AbsoluteUri]" sap:VirtualizedContainerService.HintSize="510,191" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[st_api_output]" StatusCode="[int_StatusCode]" TimeoutMS="30000">
                  <ui:HttpClient.Attachments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Attachments>
                  <ui:HttpClient.Cookies>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Cookies>
                  <ui:HttpClient.Headers>
                    <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="x-ah-openapi-auth">openapi-token</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Authorization">[st_Bearer]</InArgument>
                  </ui:HttpClient.Headers>
                  <ui:HttpClient.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Parameters>
                  <ui:HttpClient.UrlSegments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.UrlSegments>
                </ui:HttpClient>
                <If Condition="[int_StatusCode = 200]" DisplayName="If to execute logging" sap:VirtualizedContainerService.HintSize="510,1079" sap2010:WorkflowViewState.IdRef="If_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Logging" sap:VirtualizedContainerService.HintSize="476,844" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="SpecificContent" />
                        <Variable x:TypeArguments="scg:List(x:String)" Name="Categories" />
                        <Variable x:TypeArguments="s:Func(njl:JObject, x:String, x:Int32)" Default="[Function(response as JObject, fieldName as string) if(response.ContainsKey(fieldName), Integer.Parse(response(fieldName).ToString()), 0)]" Name="TryGetIntegerValueFunc" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON - API response" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[json_api_output]" JsonString="[st_api_output]" />
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExtractCategoryNames workflow" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ExtractCategoryNames.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="njl:JToken" x:Key="Response">[json_api_output("data")("categories")]</InArgument>
                          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_CategoryNames">[Categories]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign DisplayName="Create Specific Contect" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[SpecificContent]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" xml:space="preserve">[New Dictionary(Of String, Object) From {
	{"time_to_run", (DateTime.Now - startTime)},
	{"arg_user", Environment.UserName},
	{"arg_automation_hub_id", Integer.Parse(automationHubId)},
	{"arg_pc_name", Environment.MachineName},
	{"arg_automation_name", json_api_output("data")("process_name").ToString()},
	{"arg_categories", JsonConvert.SerializeObject(Categories)},
	{"arg_sla_nps_penalty", TryGetIntegerValueFunc(CType(json_api_output("data"), JObject),"q2-sla_nps_fine")},
	{"arg_sla_nps_benefit", TryGetIntegerValueFunc(CType(json_api_output("data"), JObject),"q2-sla_nps_benefit")},
	{"arg_sla_monetary_benefit", TryGetIntegerValueFunc(CType(json_api_output("data"), JObject),"q2-sla_cash_benefit")},
	{"arg_sla_monetary_penalty", TryGetIntegerValueFunc(CType(json_api_output("data"), JObject),"q2-sla_cash_fine")},
	{"arg_time_saved", Integer.Parse(json_api_output("data")("process_average_handling_time").ToString())}
}]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item for reporting" FolderPath="[st_folder_path]" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" ItemInformationCollection="[SpecificContent]" Priority="Normal" QueueType="[st_queue_name]">
                        <ui:AddQueueItem.ItemInformation>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                        </ui:AddQueueItem.ItemInformation>
                      </ui:AddQueueItem>
                      <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Transaction Item created" FolderPath="[st_folder_path]" sap:VirtualizedContainerService.HintSize="434,39" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="[st_queue_name]" TransactionItem="[transaction]" />
                      <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Transaction Status - successful" ErrorType="Business" FolderPath="[st_folder_path]" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Successful" TransactionItem="[transaction]">
                        <ui:SetTransactionStatus.Analytics>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                        </ui:SetTransactionStatus.Analytics>
                        <ui:SetTransactionStatus.Output>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                        </ui:SetTransactionStatus.Output>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:SetTransactionStatus>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="Error message" DisplayName="Message Box - invalid response" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[st_error_message]" />
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:TimeoutException" sap:VirtualizedContainerService.HintSize="941,161" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:TimeoutException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:TimeoutException" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message - Timeout AH API call" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Timeout error for AH API call&quot;]" />
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="s:InvalidOperationException" sap:VirtualizedContainerService.HintSize="941,154" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:InvalidOperationException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:InvalidOperationException" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:MessageBox ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" Caption="Error message" DisplayName="Message Box - Not all fields filled" sap:VirtualizedContainerService.HintSize="334,85" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Please make sure that all fields are completed in Automation Hub&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MessageBox>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_8" />
      </If.Else>
    </If>
  </Sequence>
</Activity>